Name: Andy Chen
Email: achen81@ucsc.edu
Student ID: 1537306
Lab Assignment: Lab 2 Introduction To Logic With MultiMedia Logic
Section Number: 01D

1. If I did not have a seven segment display in MML, I would be able to make one through using seven regular LED lights and connecting them to seven different switches whilst organizing the seven LED lights to look like an 8. In addition, I would hook up the first switch to the top of the eight, then continue doing the rest of the switches in clockwise direction of the eight until I reach the last switch where it would be assigned to the LED light that represents the middle of the eight.

2. From my analysis of the random number generator, I believe that once a button or switch that is connected to the random number generator is pressed or flipped, the random number generator picks a number that is represented as a binary number between the closed group of the lowest number of x to the largest number of x, where x is represented as the number of outputs that is connected to the random number generator times one bit. For example, if there were three outputs, then once a button or switch is flipped, the random number generator randomly chooses a number between 3 bits, or, between the closed group of 0 to 7.

3. I do not believe that things in a computer are at all “random”. Just like how the logic gates in a computer are programmed to, they listen for the users’ inputs and act accordingly in order to fulfill the request of the user. For example, if a user wishes to download something, the user can simply go to the website and click download, and from that point, the logic gates reads through the user’s input and in the end, downloads the certain thing that was requested. The only thing that I can see as “random” is if there is a certain bug in the computer where it hinders the logic gates probably by misinterpreting the user’s input and sending it off to the logic gates where it can lead to “random” results that the user did not request. Even with the random number generator, I can see that it is not as “random” as we may see it as. For instance, there is a number limit to the random number generator, and it can only return a number that is either the two number limits or any numbers that are between the two. The process COULD include an AND gate and NAND gate where it makes all possibilities between the two limits true and at the end of the process, something like an AND gate would keep track if a number is sent or not and if the action of returning a number is not met, it would return a 0 and return a single number then it would change that 0 to a 1 and end the program for the random number generator. In conclusion, I believe that a computer is not at all “truly random”.

Additional Notes: A friend had advised me to write out a truth table for part D as it makes solving the problem a lot easier with the truth table written out.
